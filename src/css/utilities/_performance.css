/* ==========================================================================
   Performance Utilities
   CSS optimizations for smooth animations and better rendering
   ========================================================================== */

/* ==========================================================================
   GPU Acceleration
   ========================================================================== */

/* Force GPU acceleration for animated elements */
.gpu-accelerated {
    transform: translateZ(0);
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    perspective: 1000px;
}

/* Auto GPU acceleration for hover states */
.hover-gpu:hover {
    transform: translateZ(0);
}

/* ==========================================================================
   Will-change Optimizations
   ========================================================================== */

/* Prepare elements for animation */
.will-change-transform {
    will-change: transform;
}

.will-change-opacity {
    will-change: opacity;
}

.will-change-filter {
    will-change: filter;
}

.will-change-contents {
    will-change: contents;
}

/* Auto will-change for interactive elements */
.interactive {
    will-change: transform, opacity;
}

/* Remove will-change after animation */
.will-change-auto {
    will-change: auto;
}

/* ==========================================================================
   Containment Optimizations
   ========================================================================== */

/* Layout containment for card grids */
.contain-layout {
    contain: layout;
}

/* Style containment for independent components */
.contain-style {
    contain: style;
}

/* Paint containment for animated elements */
.contain-paint {
    contain: paint;
}

/* Size containment for fixed-size elements */
.contain-size {
    contain: size;
}

/* Strict containment for isolated components */
.contain-strict {
    contain: strict;
}

/* Content containment for dynamic content */
.contain-content {
    contain: content;
}

/* ==========================================================================
   Rendering Optimizations
   ========================================================================== */

/* Optimize font rendering */
.font-smoothing {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

/* Optimize image rendering */
.image-rendering-quality {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
}

.image-rendering-speed {
    image-rendering: pixelated;
}

/* Optimize SVG rendering */
.shape-rendering-optimize {
    shape-rendering: geometricPrecision;
}

/* ==========================================================================
   Animation Performance
   ========================================================================== */

/* Disable animations when not visible */
.pause-animation-offscreen {
    animation-play-state: paused;
}

/* Optimize backdrop filters */
.backdrop-performance {
    /* Use with caution - can impact performance */
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
}

@supports not (backdrop-filter: blur(10px)) {
    .backdrop-performance {
        background: rgba(0, 20, 0, 0.95);
    }
}

/* ==========================================================================
   Scroll Performance
   ========================================================================== */

/* Optimize scrolling containers */
.scroll-optimize {
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
}

/* Passive scrolling for better performance */
.scroll-passive {
    touch-action: pan-y;
}

/* Scroll snapping optimization */
.scroll-snap-optimize {
    scroll-snap-type: y mandatory;
    scroll-padding-top: var(--header-height, 80px);
}

/* ==========================================================================
   Layer Management
   ========================================================================== */

/* Create new layer for complex animations */
.create-layer {
    transform: translateZ(0);
    position: relative;
    z-index: 0;
}

/* Isolate element rendering */
.isolate {
    isolation: isolate;
}

/* ==========================================================================
   Loading Performance
   ========================================================================== */

/* Lazy loading images */
.lazy-load {
    loading: lazy;
}

/* Preload critical resources */
.preload-critical {
    rel: preload;
    as: style;
}

/* ==========================================================================
   Reduced Motion Support
   ========================================================================== */

@media (prefers-reduced-motion: reduce) {
    /* Remove all transitions and animations */
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
    
    /* Reset will-change properties */
    .will-change-transform,
    .will-change-opacity,
    .will-change-filter,
    .interactive {
        will-change: auto;
    }
}

/* ==========================================================================
   Memory Optimization
   ========================================================================== */

/* Remove expensive effects on low-end devices */
@media (max-width: 768px) {
    .backdrop-performance {
        backdrop-filter: none;
        -webkit-backdrop-filter: none;
        background: rgba(0, 20, 0, 0.95);
    }
    
    /* Simplify shadows */
    .shadow-expensive {
        box-shadow: 0 2px 4px rgba(0, 255, 0, 0.2);
    }
}

/* ==========================================================================
   Debug Performance
   ========================================================================== */

/* Highlight repaint areas (development only) */
.debug-repaint * {
    outline: 1px solid rgba(255, 0, 0, 0.1);
}

/* Show layer boundaries (development only) */
.debug-layers * {
    outline: 1px dashed rgba(0, 255, 255, 0.2);
}