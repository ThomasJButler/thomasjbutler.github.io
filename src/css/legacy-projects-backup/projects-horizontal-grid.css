/* PROJECTS HORIZONTAL ARTISTIC GRID - V3.0 */

/* Container for horizontal scrolling */
.projects-horizontal-container {
    position: relative;
    width: 100%;
    min-height: 100vh;
    padding: 2rem 0;
    overflow-x: auto;
    overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
}

/* Horizontal Grid Layout */
.projects-horizontal-grid {
    display: flex;
    gap: 2rem;
    padding: 2rem;
    min-width: fit-content;
    align-items: stretch;
}

/* Base card styling with varied sizes */
.project-card-horizontal {
    background: linear-gradient(135deg, 
        rgba(0, 40, 0, 0.9), 
        rgba(0, 60, 0, 0.9)
    );
    border: 2px solid var(--matrix-green);
    border-radius: 12px;
    padding: 1.5rem;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    min-height: 400px;
}

/* Size variations for artistic layout */
.project-card-horizontal.size-small {
    width: 300px;
    min-height: 350px;
}

.project-card-horizontal.size-medium {
    width: 400px;
    min-height: 450px;
}

.project-card-horizontal.size-large {
    width: 500px;
    min-height: 500px;
}

.project-card-horizontal.size-featured {
    width: 600px;
    min-height: 550px;
}

/* Hover effects */
.project-card-horizontal:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
        0 20px 50px rgba(0, 255, 0, 0.3),
        inset 0 0 30px rgba(0, 255, 0, 0.1);
    z-index: 10;
}

/* Project image with aspect ratio */
.project-image-container {
    width: 100%;
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    margin-bottom: 1rem;
}

.project-card-horizontal.size-small .project-image-container {
    height: 150px;
}

.project-card-horizontal.size-medium .project-image-container {
    height: 200px;
}

.project-card-horizontal.size-large .project-image-container {
    height: 250px;
}

.project-card-horizontal.size-featured .project-image-container {
    height: 300px;
}

.project-image-horizontal {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
}

.project-card-horizontal:hover .project-image-horizontal {
    transform: scale(1.1);
}

/* Modal System */
.project-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(10px);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.project-modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.project-modal {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.9);
    background: linear-gradient(135deg, 
        rgba(0, 40, 0, 0.95), 
        rgba(0, 60, 0, 0.95)
    );
    border: 2px solid var(--matrix-green);
    border-radius: 16px;
    max-width: 900px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    padding: 3rem;
    box-shadow: 0 0 50px rgba(0, 255, 0, 0.5);
    transition: transform 0.3s ease;
}

.project-modal-overlay.active .project-modal {
    transform: translate(-50%, -50%) scale(1);
}

.modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 40px;
    height: 40px;
    background: rgba(0, 255, 0, 0.1);
    border: 2px solid var(--matrix-green);
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.modal-close:hover {
    background: var(--matrix-green);
    color: #000;
    transform: rotate(90deg);
}

/* Scroll indicators */
.scroll-indicator {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 50px;
    height: 50px;
    background: rgba(0, 255, 0, 0.1);
    border: 2px solid var(--matrix-green);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 100;
}

.scroll-indicator:hover {
    background: var(--matrix-green);
    color: #000;
}

.scroll-indicator.left {
    left: 1rem;
}

.scroll-indicator.right {
    right: 1rem;
}

/* Responsive Design */
@media (max-width: 1200px) {
    .projects-horizontal-grid {
        gap: 1.5rem;
        padding: 1.5rem;
    }
    
    .project-card-horizontal.size-featured {
        width: 500px;
    }
    
    .project-card-horizontal.size-large {
        width: 400px;
    }
}

@media (max-width: 768px) {
    /* Stack vertically on mobile */
    .projects-horizontal-container {
        overflow-x: visible;
        overflow-y: visible;
    }
    
    .projects-horizontal-grid {
        flex-direction: column;
        width: 100%;
        min-width: auto;
    }
    
    .project-card-horizontal,
    .project-card-horizontal.size-small,
    .project-card-horizontal.size-medium,
    .project-card-horizontal.size-large,
    .project-card-horizontal.size-featured {
        width: 100%;
        max-width: 500px;
        margin: 0 auto;
    }
    
    .scroll-indicator {
        display: none;
    }
    
    .project-modal {
        padding: 2rem;
        width: 95%;
    }
}

/* Category filters for horizontal layout */
.category-filters {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
}

.filter-btn {
    padding: 0.75rem 1.5rem;
    background: rgba(0, 0, 0, 0.8);
    border: 2px solid var(--matrix-green);
    color: var(--matrix-green);
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 0.9rem;
    font-weight: bold;
}

.filter-btn:hover,
.filter-btn.active {
    background: var(--matrix-green);
    color: #000;
    box-shadow: 0 0 15px rgba(0, 255, 0, 0.5);
}

/* Loading state */
.projects-loading {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 60vh;
}

.loading-spinner {
    width: 50px;
    height: 50px;
    border: 3px solid rgba(0, 255, 0, 0.1);
    border-top-color: var(--matrix-green);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}